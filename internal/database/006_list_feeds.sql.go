// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: 006_list_feeds.sql

package database

import (
	"context"
)

const listFeeds = `-- name: ListFeeds :many
SELECT f.name as feed_name, f.url as feed_url, u.name as user_name
FROM feeds f
INNER JOIN users u on f.user_id = u.id
`

type ListFeedsRow struct {
	FeedName string
	FeedUrl  string
	UserName string
}

func (q *Queries) ListFeeds(ctx context.Context) ([]ListFeedsRow, error) {
	rows, err := q.db.QueryContext(ctx, listFeeds)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []ListFeedsRow
	for rows.Next() {
		var i ListFeedsRow
		if err := rows.Scan(&i.FeedName, &i.FeedUrl, &i.UserName); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
